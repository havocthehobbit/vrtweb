var _ = require("lodash");

var $gl = require("../l_node_modules/global.js").gl;
//var $test_data = require("../l_node_modules/test_data.js").test_data;

//var all_data=$test_data.all_data;

var main={
    auto_run : function(){ 
        console.log("mds notes : init notes lib")}
    ,table : "../data/db1/notes.json"
    ,schema : {
        "useruuid": "",
        "uuid" : "",
        "title": "main notes",
        "body": "",
        "type": "usermain",
        "subtype": "",
        "notelink": "",
        "lasteditdate": "",
        "createdate": ""
    },getUserNotes : function( arg1 , fn1){
        var args=arguments;
        var args_l=args.length;

        var ret_data={ data : {} }
        
        var cb=function(){}

        var uuid=arg1;

        if ( args.length > 0){
            if (_.isPlainObject(args[0])){
                var a0=args[0];
                if (!_.isUndefined(args[0].cb)){
                    cb=args[0].cb
                }
                if (!_.isUndefined(a0.date)){
                    cb=args[0].date
                }
                
            }else{
                if (_.isFunction(args[0])){
                    cb=args[0];
                }
            }
            
            if (args.length > 1){
                cb=args[1];
            }
        }
        
        var jsonfilepath= this.table ;
    
        var mainfn=function(){
            
        }

        $gl.get_json_db(   jsonfilepath  , function(new_data){
            //t_data.data=new_data.all;
            var notesret=[];
            _.each(new_data.all , function(rec, i){                
                if (rec.useruuid===uuid){                                        
                    //ret_data=rec;
                    notesret.push(rec )                    
                    return;
                }

            })

            cb(notesret)
            //console.log("news : " , new_data)
        })        
    },saveUserNote : function( arg1 , fn1){
        var args=arguments;
        var args_l=args.length;
        var t=this;

        var ret_data={ data : {} }
        
        var cb=function(){}

        var useruuid;
        var uuid;
        

        if ( args.length > 0){
            if (_.isPlainObject(args[0])){
                var a0=args[0];
                if (!_.isUndefined(args[0].cb)){
                    cb=args[0].cb
                }
                if (!_.isUndefined(a0.date)){
                    var date=args[0].date
                }
                if (!_.isUndefined(a0.useruuid)){
                    useruuid=args[0].useruuid
                }
                if (!_.isUndefined(a0.uuid)){
                    uuid=args[0].uuid
                }
                
                
            }else{
                if (_.isFunction(args[0])){
                    cb=args[0];
                }
            }
            
            if (args.length > 1){
                cb=args[1];
            }
        }
        
        var jsonfilepath= this.table ;
    
        var mainfn=function(){
            
        }

        $gl.get_json_db(   jsonfilepath  , function(new_data){
            //t_data.data=new_data.all;
            var notesret=[];
            _.each(new_data.all , function(rec, i){    
                
                if (rec.useruuid===useruuid){                                        
                    //ret_data=rec;
                    //notesret.push(rec )                    
                    if (rec.type === "usermain"){ 
                        

                        

                        if (_.isUndefined(rec.createdate)){
                            arg1.createdate=new Date();
                        }else{                            
                            arg1.createdate=rec.createdate;
                            if (rec.createdate===""){
                                arg1.createdate=new Date();
                            }
                        }

                        arg1.lasteditdate=new Date();
                        
                        if (_.isUndefined(rec.uuid)){
                            arg1.uuid=$gl.uuid();    
                        }else{
                            arg1.uuid=rec.uuid;
                        }
                        

                        new_data.all .splice(i, 1) // delete old one

                        var new_rec=_.merge(t.schema, arg1)
                        new_data.all.push(new_rec) // update record
                    }
                    
                    return;
                }

            })

            $gl.save_json_db(jsonfilepath  , new_data , function(){
                cb({})

            })      

            //cb(notesret)
            //console.log("news : " , new_data)
        })        
    }
    
    ,fetchDates : function( arg1 , fn1){
        var ret_data={ data : {} }
        
        var cb=function(){}
        if (!_.isUndefined(fn1)){ 
            cb=fn1;
        }
        
        if (_.isFunction(arg1)){
            cb=arg1;
        }

        var jsonfilepath= this.table ;
    
        var mainfn=function(){
            
        }

        $gl.get_json_db(   jsonfilepath  , function(new_data){
            //t_data.data=new_data.all;

            ret_data=new_data.all;           

            cb(ret_data)
            
        })        
    }
    ,addDates : function( ){
        var args=arguments;
        var args_l=args.length;
        var ret_data={ data : {} }

        var cb=function(){}

        if ( args.length > 0){
            if (_.isPlainObject(args[0])){
                if (!_.isUndefined(args[0].cb)){
                    cb=args[0].cb
                }
                
            }else{
                if (_.isFunction(args[0])){
                    cb=args[0];
                }
            }
            
            if (args.length > 1){
                cb=args[1];
            }
        }

        var jsonfilepath= this.table ;
    
        
        $gl.get_json_db(   jsonfilepath  , function(new_data){
            //t_data.data=new_data.all;

            ret_data=new_data.all;           

            cb(ret_data)
            
        })

    }
    ,delDates : function( arg1 , fn1){
        var args=arguments;
        var args_l=args.length;
        var ret_data={ data : {} }

        var cb=function(){}

        if ( args.length > 0){
            if (_.isPlainObject(args[0])){
                if (!_.isUndefined(args[0].cb)){
                    cb=args[0].cb
                }
                
            }else{
                if (_.isFunction(args[0])){
                    cb=args[0];
                }
            }
            
            if (args.length > 1){
                cb=args[1];
            }
        }

        var jsonfilepath= this.table ;
    
        
        $gl.get_json_db(   jsonfilepath  , function(new_data){
            //t_data.data=new_data.all;

            ret_data=new_data.all;           

            cb(ret_data)
            
        })
    }
    ,getOutofOfficeTodayAll : function(){
        var args=arguments;
        var args_l=args.length;

        var ret_data=[]
        
        var cb=function(){}


        if ( args.length > 0){
            if (_.isPlainObject(args[0])){
                var a0=args[0];
                if (!_.isUndefined(args[0].cb)){
                    cb=args[0].cb
                }
                if (!_.isUndefined(a0.date)){
                    cb=args[0].date
                }
                
            }else{
                if (_.isFunction(args[0])){
                    cb=args[0];
                }
            }
            
            if (args.length > 1){
                cb=args[1];
            }
        }
        
        var jsonfilepath= this.table ;
    

        $gl.get_json_db(   jsonfilepath  , function(new_data){
            //t_data.data=new_data.all;

            _.each(new_data.all , function(r, i){
                    
                //if (rec.userid===userid){                    
                  //  ret_data=r;
                if (r.type==="ooo"){
                  ret_data.push(r)        
                }
                //}

            })

            
            cb(ret_data)

            
            //console.log("news : " , new_data)
        }) 

    }
    ,getProjectsTodayAll : function(){
        var args=arguments;
        var args_l=args.length;

        var ret_data=[]
        
        var cb=function(){}


        if ( args.length > 0){
            if (_.isPlainObject(args[0])){
                var a0=args[0];
                if (!_.isUndefined(args[0].cb)){
                    cb=args[0].cb
                }
                if (!_.isUndefined(a0.date)){
                    cb=args[0].date
                }
                
            }else{
                if (_.isFunction(args[0])){
                    cb=args[0];
                }
            }
            
            if (args.length > 1){
                cb=args[1];
            }
        }
        
        var jsonfilepath= this.table ;
    

        $gl.get_json_db(   jsonfilepath  , function(new_data){
            //t_data.data=new_data.all;

            _.each(new_data.all , function(r, i){
                    
                //if (rec.userid===userid){                    
                  //  ret_data=r;

                    if (r.type==="projects"){
                        ret_data.push(r)        
                    }
                   
                   
                //}

            })
            cb(ret_data)
            
            //console.log("news : " , new_data)
        }) 

    }

}

module.exports.notes=main;